{"ast":null,"code":"import _classCallCheck from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/khanhpn/Project/freelancer/rengorum/frontend/src/containers/userprofile/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserProfile as _fetchUserProfile } from '../../actions';\nimport StatusMessage from '../../components/statusmessage';\nimport Profile from '../../components/profile';\nimport './styles.css';\n\nvar UserProfileContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfileContainer, _Component);\n\n  function UserProfileContainer() {\n    _classCallCheck(this, UserProfileContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserProfileContainer).apply(this, arguments));\n  }\n\n  _createClass(UserProfileContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var username = this.props.match.params.username;\n      this.props.fetchUserProfile(username);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      var oldUsername = this.props.match.params.username;\n      var futureUsername = newProps.match.params.username;\n\n      if (oldUsername !== futureUsername) {\n        this.props.fetchUserProfile(futureUsername);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isLoading = _this$props.isLoading,\n          error = _this$props.error,\n          profile = _this$props.profile;\n\n      if (error || !profile || isLoading) {\n        return React.createElement(StatusMessage, {\n          error: error || !profile,\n          errorClassName: \"userProfile-error\",\n          errorMessage: error,\n          loading: isLoading,\n          loadingMessage: \"We are fetching the user profile for you\",\n          type: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      }\n\n      var id = profile.id,\n          email = profile.email,\n          first_name = profile.first_name,\n          last_name = profile.last_name,\n          age = profile.age,\n          role = profile.role,\n          createdAt = profile.createdAt;\n      return React.createElement(Profile, {\n        id: id,\n        first_name: first_name,\n        last_name: last_name,\n        role: role,\n        email: email,\n        dateJoined: createdAt,\n        age: age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return UserProfileContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.userProfile.isLoading,\n    profile: state.userProfile.profile,\n    error: state.userProfile.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchUserProfile: function fetchUserProfile(username) {\n      dispatch(_fetchUserProfile(username));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfileContainer);","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/containers/userprofile/index.js"],"names":["React","Component","connect","fetchUserProfile","StatusMessage","Profile","UserProfileContainer","username","props","match","params","newProps","oldUsername","futureUsername","isLoading","error","profile","id","email","first_name","last_name","age","role","createdAt","mapStateToProps","state","userProfile","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchUserProfile} from '../../actions';\r\nimport StatusMessage from '../../components/statusmessage';\r\nimport Profile from '../../components/profile';\r\nimport './styles.css';\r\n\r\nclass UserProfileContainer extends Component {\r\n  componentDidMount() {\r\n    const {username} = this.props.match.params;\r\n    this.props.fetchUserProfile(username);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const {username: oldUsername} = this.props.match.params;\r\n    const {username: futureUsername} = newProps.match.params;\r\n    if (oldUsername !== futureUsername) {\r\n      this.props.fetchUserProfile(futureUsername);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {isLoading, error, profile} = this.props;\r\n\r\n    if (error || !profile || isLoading) {\r\n      return (\r\n        <StatusMessage\r\n          error={error || !profile}\r\n          errorClassName=\"userProfile-error\"\r\n          errorMessage={error}\r\n          loading={isLoading}\r\n          loadingMessage={`We are fetching the user profile for you`}\r\n          type=\"default\"\r\n        />\r\n      );\r\n    }\r\n\r\n    const {\r\n      id,\r\n      email,\r\n      first_name,\r\n      last_name,\r\n      age,\r\n      role,\r\n      createdAt,\r\n    } = profile;\r\n\r\n    return (\r\n      <Profile\r\n        id={id}\r\n        first_name={first_name}\r\n        last_name={last_name}\r\n        role={role}\r\n        email={email}\r\n        dateJoined={createdAt}\r\n        age={age}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.userProfile.isLoading,\r\n  profile: state.userProfile.profile,\r\n  error: state.userProfile.error,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchUserProfile: username => {\r\n    dispatch(fetchUserProfile(username));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UserProfileContainer);\r\n"]},"metadata":{},"sourceType":"module"}