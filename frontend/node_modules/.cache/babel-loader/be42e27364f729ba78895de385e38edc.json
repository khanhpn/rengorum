{"ast":null,"code":"import _classCallCheck from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/threadlist/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\nimport StatusMessage from '../statusmessage';\nimport Avatar from '../avatar';\nimport './styles.css';\n\nvar ThreadList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ThreadList, _Component);\n\n  function ThreadList() {\n    _classCallCheck(this, ThreadList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ThreadList).apply(this, arguments));\n  }\n\n  _createClass(ThreadList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isLoading = _this$props.isLoading,\n          error = _this$props.error,\n          threads = _this$props.threads;\n\n      if (error || !threads || isLoading || threads.length === 0) {\n        return React.createElement(StatusMessage, {\n          error: error || !threads,\n          errorClassName: \"forum-error\",\n          errorMessage: error,\n          loading: isLoading,\n          loadingMessage: \"We are fetching the forum for you\",\n          nothing: threads && threads.length === 0,\n          nothingMessage: \"No threads to display\",\n          nothingClassName: \"forum-error\",\n          type: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        });\n      }\n\n      var threadList = threads.map(function (thread) {\n        var id = thread.id,\n            name = thread.name,\n            pinned = thread.pinned,\n            creator = thread.creator,\n            avatar = thread.avatar,\n            naturaltime = thread.naturaltime,\n            replies_count = thread.replies_count,\n            last_activity = thread.last_activity;\n        name = name.length > 57 ? name.substring(0, 55) + '...' : name;\n        var lastActivity = last_activity ? React.createElement(\"div\", {\n          className: \"forum-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          className: \"forum-avatar\",\n          avatar: last_activity.avatar,\n          centered: false,\n          link: \"/user/\".concat(last_activity.username),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"forum-column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"forum-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, last_activity.name), React.createElement(\"div\", {\n          className: \"forum-meta\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/user/\".concat(last_activity.username),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), last_activity.username), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"  \\u2014  \".concat(last_activity.naturaltime))))) : React.createElement(\"div\", {\n          className: \"forum-text forum-vertical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, '—  No activity —');\n        return React.createElement(Segment, {\n          vertical: true,\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          textAlign: \"left\",\n          padded: \"horizontally\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: 7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Grid.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"forum-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          className: \"forum-avatar\",\n          avatar: avatar,\n          centered: false,\n          link: \"/user/\".concat(creator),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"forum-column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: pinned ? 'pin' : 'talk outline',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: \"/thread/\".concat(id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, name)), React.createElement(\"div\", {\n          className: \"forum-meta\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/user/\".concat(creator),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), creator), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"  \\u2014  \".concat(naturaltime))))))), React.createElement(Grid.Column, {\n          width: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"forum-column forum-stats forum-vertical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            paddingBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"comment outline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), replies_count, replies_count > 1 ? ' replies' : ' reply'))), React.createElement(Grid.Column, {\n          width: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, lastActivity)));\n      });\n      return React.createElement(\"div\", {\n        className: \"forumContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Segment.Group, {\n        className: \"forum-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, threadList));\n    }\n  }]);\n\n  return ThreadList;\n}(Component);\n\nexport { ThreadList as default };","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/threadlist/index.js"],"names":["React","Component","Link","Segment","Grid","Icon","StatusMessage","Avatar","ThreadList","props","isLoading","error","threads","length","threadList","map","thread","id","name","pinned","creator","avatar","naturaltime","replies_count","last_activity","substring","lastActivity","username","paddingBottom"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react';\r\nimport StatusMessage from '../statusmessage';\r\nimport Avatar from '../avatar';\r\nimport './styles.css';\r\n\r\nexport default class ThreadList extends Component {\r\n  render() {\r\n    const {isLoading, error, threads} = this.props;\r\n\r\n    if (error || !threads || isLoading || threads.length === 0) {\r\n      return (\r\n        <StatusMessage\r\n          error={error || !threads}\r\n          errorClassName=\"forum-error\"\r\n          errorMessage={error}\r\n          loading={isLoading}\r\n          loadingMessage={`We are fetching the forum for you`}\r\n          nothing={threads && threads.length === 0}\r\n          nothingMessage={`No threads to display`}\r\n          nothingClassName=\"forum-error\"\r\n          type=\"default\"\r\n        />\r\n      );\r\n    }\r\n\r\n    const threadList = threads.map(thread => {\r\n      let {\r\n        id,\r\n        name,\r\n        pinned,\r\n        creator,\r\n        avatar,\r\n        naturaltime,\r\n        replies_count,\r\n        last_activity,\r\n      } = thread;\r\n\r\n      name = name.length > 57 ? name.substring(0, 55) + '...' : name;\r\n\r\n      let lastActivity = last_activity ? (\r\n        <div className=\"forum-row\">\r\n          <Avatar\r\n            className=\"forum-avatar\"\r\n            avatar={last_activity.avatar}\r\n            centered={false}\r\n            link={`/user/${last_activity.username}`}\r\n          />\r\n          <div className=\"forum-column\">\r\n            <div className=\"forum-name\">{last_activity.name}</div>\r\n            <div className=\"forum-meta\">\r\n              <Link to={`/user/${last_activity.username}`}>\r\n                <Icon name=\"user\" />\r\n                {last_activity.username}\r\n              </Link>\r\n              <b>{`  —  ${last_activity.naturaltime}`}</b>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"forum-text forum-vertical\">{'—  No activity —'}</div>\r\n      );\r\n\r\n      return (\r\n        <Segment vertical key={id}>\r\n          <Grid textAlign=\"left\" padded=\"horizontally\">\r\n            <Grid.Column width={7}>\r\n              <Grid.Row>\r\n                <div className=\"forum-row\">\r\n                  <Avatar\r\n                    className=\"forum-avatar\"\r\n                    avatar={avatar}\r\n                    centered={false}\r\n                    link={`/user/${creator}`}\r\n                  />\r\n                  <div className=\"forum-column\">\r\n                    <div>\r\n                      <Icon name={pinned ? 'pin' : 'talk outline'} />\r\n                      <Link to={`/thread/${id}`}>{name}</Link>\r\n                    </div>\r\n                    <div className=\"forum-meta\">\r\n                      <Link to={`/user/${creator}`}>\r\n                        <Icon name=\"user\" />\r\n                        {creator}\r\n                      </Link>\r\n                      <b>{`  —  ${naturaltime}`}</b>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Grid.Row>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <div className=\"forum-column forum-stats forum-vertical\">\r\n                <div style={{paddingBottom: '5px'}}>\r\n                  <Icon name=\"comment outline\" />\r\n                  {replies_count}\r\n                  {replies_count > 1 ? ' replies' : ' reply'}\r\n                </div>\r\n              </div>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>{lastActivity}</Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"forumContainer\">\r\n        <Segment.Group className=\"forum-list\">{threadList}</Segment.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}