{"ast":null,"code":"import _classCallCheck from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/statusmessage/index.js\";\nimport React, { Component } from 'react';\nimport { Icon, Message } from 'semantic-ui-react';\nimport Loader from '../loader';\nimport './styles.css';\n\nvar StatusMessage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StatusMessage, _Component);\n\n  function StatusMessage() {\n    _classCallCheck(this, StatusMessage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StatusMessage).apply(this, arguments));\n  }\n\n  _createClass(StatusMessage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          loadingClassName = _this$props.loadingClassName,\n          loadingMessage = _this$props.loadingMessage,\n          error = _this$props.error,\n          errorClassName = _this$props.errorClassName,\n          errorMessage = _this$props.errorMessage,\n          success = _this$props.success,\n          successClassName = _this$props.successClassName,\n          successMessage = _this$props.successMessage,\n          nothing = _this$props.nothing,\n          nothingClassName = _this$props.nothingClassName,\n          nothingMessage = _this$props.nothingMessage,\n          type = _this$props.type;\n\n      if (loading) {\n        if (type === 'modal') {\n          return React.createElement(\"div\", {\n            className: loadingClassName || 'statusMessage-modal',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(Message, {\n            attached: true,\n            icon: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(Message.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            name: \"circle notched\",\n            loading: true,\n            size: \"big\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }), loadingMessage || 'Loading ...')));\n        }\n\n        return React.createElement(\"div\", {\n          className: loadingClassName || 'statusMessage-default',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(Message, {\n          size: \"tiny\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(Message.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Message.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Just few seconds\"), loadingMessage || 'We are fetching the content for you.')));\n      } else if (error) {\n        if (type === 'modal') {\n          return React.createElement(\"div\", {\n            className: errorClassName || 'statusMessage-modal',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(Message, {\n            attached: true,\n            error: true,\n            icon: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(Message.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            name: \"thumbs outline down\",\n            size: \"big\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }), errorMessage || error || 'Sorry, something went wrong')));\n        }\n\n        return React.createElement(\"div\", {\n          className: errorClassName || 'statusMessage-default',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Message, {\n          error: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Message.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"thumbs outline down\",\n          size: \"big\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), errorMessage || error || 'Sorry, something went wrong')));\n      } else if (success) {\n        if (type === 'modal') {\n          return React.createElement(\"div\", {\n            className: successClassName || 'statusMessage-modal',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(Message, {\n            attached: true,\n            positive: true,\n            icon: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(Message.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            name: \"thumbs outline up\",\n            size: \"big\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }), successMessage || 'Successful')));\n        }\n\n        return React.createElement(\"div\", {\n          className: successClassName || 'statusMessage-default',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Message, {\n          positive: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Message.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"thumbs outline up\",\n          size: \"big\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), successMessage || 'Successful')));\n      } else if (nothing) {\n        if (type === 'modal') {\n          return React.createElement(\"div\", {\n            className: nothingClassName || 'statusMessage-modal',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(Message, {\n            attached: true,\n            error: true,\n            icon: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(Message.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            name: \"thumbs outline down\",\n            size: \"big\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }), nothingMessage || 'Successful')));\n        }\n\n        return React.createElement(\"div\", {\n          className: nothingClassName || 'statusMessage-default',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Message, {\n          error: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Message.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"thumbs outline down\",\n          size: \"big\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), nothingMessage || 'Nothing to display')));\n      }\n\n      return null;\n    }\n  }]);\n\n  return StatusMessage;\n}(Component);\n\nexport { StatusMessage as default };","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/statusmessage/index.js"],"names":["React","Component","Icon","Message","Loader","StatusMessage","props","loading","loadingClassName","loadingMessage","error","errorClassName","errorMessage","success","successClassName","successMessage","nothing","nothingClassName","nothingMessage","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,OAAd,QAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,cAAP;;IAEqBC,a;;;;;;;;;;;;;6BACV;AAAA,wBAeH,KAAKC,KAfF;AAAA,UAELC,OAFK,eAELA,OAFK;AAAA,UAGLC,gBAHK,eAGLA,gBAHK;AAAA,UAILC,cAJK,eAILA,cAJK;AAAA,UAKLC,KALK,eAKLA,KALK;AAAA,UAMLC,cANK,eAMLA,cANK;AAAA,UAOLC,YAPK,eAOLA,YAPK;AAAA,UAQLC,OARK,eAQLA,OARK;AAAA,UASLC,gBATK,eASLA,gBATK;AAAA,UAULC,cAVK,eAULA,cAVK;AAAA,UAWLC,OAXK,eAWLA,OAXK;AAAA,UAYLC,gBAZK,eAYLA,gBAZK;AAAA,UAaLC,cAbK,eAaLA,cAbK;AAAA,UAcLC,IAdK,eAcLA,IAdK;;AAiBP,UAAIZ,OAAJ,EAAa;AACX,YAAIY,IAAI,KAAK,OAAb,EAAsB;AACpB,iBACE;AAAK,YAAA,SAAS,EAAEX,gBAAgB,IAAI,qBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,OAAD;AAAS,YAAA,QAAQ,MAAjB;AAAkB,YAAA,IAAI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAC,gBAAX;AAA4B,YAAA,OAAO,MAAnC;AAAoC,YAAA,IAAI,EAAC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,cAAc,IAAI,aAFrB,CADF,CADF,CADF;AAUD;;AACD,eACE;AAAK,UAAA,SAAS,EAAED,gBAAgB,IAAI,uBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,OAAD;AAAS,UAAA,IAAI,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEGC,cAAc,IAAI,sCAFrB,CADF,CAHF,CADF;AAYD,OAzBD,MAyBO,IAAIC,KAAJ,EAAW;AAChB,YAAIS,IAAI,KAAK,OAAb,EAAsB;AACpB,iBACE;AAAK,YAAA,SAAS,EAAER,cAAc,IAAI,qBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,OAAD;AAAS,YAAA,QAAQ,MAAjB;AAAkB,YAAA,KAAK,MAAvB;AAAwB,YAAA,IAAI,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAC,qBAAX;AAAiC,YAAA,IAAI,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,YAAY,IAAIF,KAAhB,IAAyB,6BAF5B,CADF,CADF,CADF;AAUD;;AACD,eACE;AAAK,UAAA,SAAS,EAAEC,cAAc,IAAI,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,qBAAX;AAAiC,UAAA,IAAI,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEGC,YAAY,IAAIF,KAAhB,IAAyB,6BAF5B,CADF,CADF,CADF;AAUD,OAvBM,MAuBA,IAAIG,OAAJ,EAAa;AAClB,YAAIM,IAAI,KAAK,OAAb,EAAsB;AACpB,iBACE;AAAK,YAAA,SAAS,EAAEL,gBAAgB,IAAI,qBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,OAAD;AAAS,YAAA,QAAQ,MAAjB;AAAkB,YAAA,QAAQ,MAA1B;AAA2B,YAAA,IAAI,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAC,mBAAX;AAA+B,YAAA,IAAI,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,cAAc,IAAI,YAFrB,CADF,CADF,CADF;AAUD;;AACD,eACE;AAAK,UAAA,SAAS,EAAED,gBAAgB,IAAI,uBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,mBAAX;AAA+B,UAAA,IAAI,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEGC,cAAc,IAAI,YAFrB,CADF,CADF,CADF;AAUD,OAvBM,MAuBA,IAAIC,OAAJ,EAAa;AAClB,YAAIG,IAAI,KAAK,OAAb,EAAsB;AACpB,iBACE;AAAK,YAAA,SAAS,EAAEF,gBAAgB,IAAI,qBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,OAAD;AAAS,YAAA,QAAQ,MAAjB;AAAkB,YAAA,KAAK,MAAvB;AAAwB,YAAA,IAAI,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAC,qBAAX;AAAiC,YAAA,IAAI,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,cAAc,IAAI,YAFrB,CADF,CADF,CADF;AAUD;;AACD,eACE;AAAK,UAAA,SAAS,EAAED,gBAAgB,IAAI,uBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,qBAAX;AAAiC,UAAA,IAAI,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEGC,cAAc,IAAI,oBAFrB,CADF,CADF,CADF;AAUD;;AACD,aAAO,IAAP;AACD;;;;EAlHwCjB,S;;SAAtBI,a","sourcesContent":["import React, {Component} from 'react';\r\nimport {Icon, Message} from 'semantic-ui-react';\r\nimport Loader from '../loader';\r\nimport './styles.css';\r\n\r\nexport default class StatusMessage extends Component {\r\n  render() {\r\n    const {\r\n      loading,\r\n      loadingClassName,\r\n      loadingMessage,\r\n      error,\r\n      errorClassName,\r\n      errorMessage,\r\n      success,\r\n      successClassName,\r\n      successMessage,\r\n      nothing,\r\n      nothingClassName,\r\n      nothingMessage,\r\n      type,\r\n    } = this.props;\r\n\r\n    if (loading) {\r\n      if (type === 'modal') {\r\n        return (\r\n          <div className={loadingClassName || 'statusMessage-modal'}>\r\n            <Message attached icon>\r\n              <Message.Content>\r\n                <Icon name=\"circle notched\" loading size=\"big\" />\r\n                {loadingMessage || 'Loading ...'}\r\n              </Message.Content>\r\n            </Message>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className={loadingClassName || 'statusMessage-default'}>\r\n          <Loader />\r\n          <br />\r\n          <Message size=\"tiny\">\r\n            <Message.Content>\r\n              <Message.Header>Just few seconds</Message.Header>\r\n              {loadingMessage || 'We are fetching the content for you.'}\r\n            </Message.Content>\r\n          </Message>\r\n        </div>\r\n      );\r\n    } else if (error) {\r\n      if (type === 'modal') {\r\n        return (\r\n          <div className={errorClassName || 'statusMessage-modal'}>\r\n            <Message attached error icon>\r\n              <Message.Content>\r\n                <Icon name=\"thumbs outline down\" size=\"big\" />\r\n                {errorMessage || error || 'Sorry, something went wrong'}\r\n              </Message.Content>\r\n            </Message>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className={errorClassName || 'statusMessage-default'}>\r\n          <Message error>\r\n            <Message.Content>\r\n              <Icon name=\"thumbs outline down\" size=\"big\" />\r\n              {errorMessage || error || 'Sorry, something went wrong'}\r\n            </Message.Content>\r\n          </Message>\r\n        </div>\r\n      );\r\n    } else if (success) {\r\n      if (type === 'modal') {\r\n        return (\r\n          <div className={successClassName || 'statusMessage-modal'}>\r\n            <Message attached positive icon>\r\n              <Message.Content>\r\n                <Icon name=\"thumbs outline up\" size=\"big\" />\r\n                {successMessage || 'Successful'}\r\n              </Message.Content>\r\n            </Message>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className={successClassName || 'statusMessage-default'}>\r\n          <Message positive>\r\n            <Message.Content>\r\n              <Icon name=\"thumbs outline up\" size=\"big\" />\r\n              {successMessage || 'Successful'}\r\n            </Message.Content>\r\n          </Message>\r\n        </div>\r\n      );\r\n    } else if (nothing) {\r\n      if (type === 'modal') {\r\n        return (\r\n          <div className={nothingClassName || 'statusMessage-modal'}>\r\n            <Message attached error icon>\r\n              <Message.Content>\r\n                <Icon name=\"thumbs outline down\" size=\"big\" />\r\n                {nothingMessage || 'Successful'}\r\n              </Message.Content>\r\n            </Message>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className={nothingClassName || 'statusMessage-default'}>\r\n          <Message error>\r\n            <Message.Content>\r\n              <Icon name=\"thumbs outline down\" size=\"big\" />\r\n              {nothingMessage || 'Nothing to display'}\r\n            </Message.Content>\r\n          </Message>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}