{"ast":null,"code":"import _classCallCheck from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/post/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Segment, Grid, Icon, Dropdown } from 'semantic-ui-react';\nimport RichEditor from '../richeditor';\nimport Avatar from '../avatar';\nimport './styles.css';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Post)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDelete = function () {\n      var _this$props = _this.props,\n          deleteAction = _this$props.deleteAction,\n          id = _this$props.id,\n          threadID = _this$props.threadID,\n          isThread = _this$props.isThread;\n\n      if (isThread) {\n        deleteAction(threadID);\n      } else {\n        deleteAction(id, threadID);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          isThread = _this$props2.isThread,\n          content = _this$props2.content,\n          createdAt = _this$props2.createdAt,\n          creator = _this$props2.creator,\n          authenticatedUsername = _this$props2.authenticatedUsername,\n          authenticatedIsStaff = _this$props2.authenticatedIsStaff,\n          deletePostList = _this$props2.deletePostList;\n      var color = isThread ? 'black' : null;\n      var deleteText = isThread ? 'Delete Thread' : 'Delete Post';\n      var actions = React.createElement(\"div\", {\n        className: \"post-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        simple: true,\n        icon: \"caret down\",\n        direction: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: this.onDelete,\n        icon: \"delete\",\n        text: deleteText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }))));\n      var isLoading = !isThread && deletePostList.indexOf(id) >= 0;\n      return React.createElement(Segment, {\n        loading: isLoading,\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        textAlign: \"left\",\n        padded: \"horizontally\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: \"post-avatar\",\n        avatar: creator.avatar,\n        centered: false,\n        link: \"/user/\".concat(creator.username),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"post-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, creator.name), React.createElement(\"div\", {\n        className: \"post-username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/user/\".concat(creator.username),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), creator.username)), React.createElement(\"div\", {\n        className: \"post-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, creator.status || 'Member'))))), React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, createdAt, (authenticatedIsStaff || authenticatedUsername === creator.username) && actions), React.createElement(RichEditor, {\n        readOnly: true,\n        content: content,\n        wrapperClassName: false ? 'post-wrapper-edit' : 'post-wrapper-read',\n        editorClassName: \"post-editor\",\n        toolbarClassName: \"post-toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport { Post as default };","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/post/index.js"],"names":["React","Component","Link","Segment","Grid","Icon","Dropdown","RichEditor","Avatar","Post","onDelete","props","deleteAction","id","threadID","isThread","content","createdAt","creator","authenticatedUsername","authenticatedIsStaff","deletePostList","color","deleteText","actions","isLoading","indexOf","avatar","username","name","status"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,QAA7B,QAA4C,mBAA5C;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,cAAP;;IAEqBC,I;;;;;;;;;;;;;;;;;;UACnBC,Q,GAAW,YAAM;AAAA,wBACgC,MAAKC,KADrC;AAAA,UACRC,YADQ,eACRA,YADQ;AAAA,UACMC,EADN,eACMA,EADN;AAAA,UACUC,QADV,eACUA,QADV;AAAA,UACoBC,QADpB,eACoBA,QADpB;;AAEf,UAAIA,QAAJ,EAAc;AACZH,QAAAA,YAAY,CAACE,QAAD,CAAZ;AACD,OAFD,MAEO;AACLF,QAAAA,YAAY,CAACC,EAAD,EAAKC,QAAL,CAAZ;AACD;AACF,K;;;;;;;6BAEQ;AAAA,yBAUH,KAAKH,KAVF;AAAA,UAELE,EAFK,gBAELA,EAFK;AAAA,UAGLE,QAHK,gBAGLA,QAHK;AAAA,UAILC,OAJK,gBAILA,OAJK;AAAA,UAKLC,SALK,gBAKLA,SALK;AAAA,UAMLC,OANK,gBAMLA,OANK;AAAA,UAOLC,qBAPK,gBAOLA,qBAPK;AAAA,UAQLC,oBARK,gBAQLA,oBARK;AAAA,UASLC,cATK,gBASLA,cATK;AAYP,UAAMC,KAAK,GAAGP,QAAQ,GAAG,OAAH,GAAa,IAAnC;AACA,UAAMQ,UAAU,GAAGR,QAAQ,GAAG,eAAH,GAAqB,aAAhD;AACA,UAAMS,OAAO,GACX;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,IAAI,EAAC,YAAtB;AAAmC,QAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,OAAO,EAAE,KAAKd,QADhB;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAEa,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CADF;AAaA,UAAME,SAAS,GAAG,CAACV,QAAD,IAAaM,cAAc,CAACK,OAAf,CAAuBb,EAAvB,KAA8B,CAA7D;AACA,aACE,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAEY,SAAlB;AAA6B,QAAA,KAAK,EAAEH,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,MAAM,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,MAAM,EAAEJ,OAAO,CAACS,MAFlB;AAGE,QAAA,QAAQ,EAAE,KAHZ;AAIE,QAAA,IAAI,kBAAWT,OAAO,CAACU,QAAnB,CAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BV,OAAO,CAACW,IAApC,CADF,EAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,kBAAWX,OAAO,CAACU,QAAnB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGV,OAAO,CAACU,QAFX,CADF,CAFF,EAQE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,OAAO,CAACY,MAAR,IAAkB,QADrB,CARF,CAPF,CADF,CADF,CADF,EAyBE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,SADH,EAEG,CAACG,oBAAoB,IACpBD,qBAAqB,KAAKD,OAAO,CAACU,QADnC,KAECJ,OAJJ,CADF,EAOE,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAE,IADZ;AAEE,QAAA,OAAO,EAAER,OAFX;AAGE,QAAA,gBAAgB,EACd,QAAQ,mBAAR,GAA8B,mBAJlC;AAME,QAAA,eAAe,EAAC,aANlB;AAOE,QAAA,gBAAgB,EAAC,cAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CAzBF,CADF,CADF;AA+CD;;;;EArF+Bf,S;;SAAbQ,I","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Segment, Grid, Icon, Dropdown} from 'semantic-ui-react';\r\nimport RichEditor from '../richeditor';\r\nimport Avatar from '../avatar';\r\nimport './styles.css';\r\n\r\nexport default class Post extends Component {\r\n  onDelete = () => {\r\n    const {deleteAction, id, threadID, isThread} = this.props;\r\n    if (isThread) {\r\n      deleteAction(threadID);\r\n    } else {\r\n      deleteAction(id, threadID);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      isThread,\r\n      content,\r\n      createdAt,\r\n      creator,\r\n      authenticatedUsername,\r\n      authenticatedIsStaff,\r\n      deletePostList,\r\n    } = this.props;\r\n\r\n    const color = isThread ? 'black' : null;\r\n    const deleteText = isThread ? 'Delete Thread' : 'Delete Post';\r\n    const actions = (\r\n      <div className=\"post-dropdown\">\r\n        <Dropdown simple icon=\"caret down\" direction=\"left\">\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item\r\n              onClick={this.onDelete}\r\n              icon=\"delete\"\r\n              text={deleteText}\r\n            />\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n    const isLoading = !isThread && deletePostList.indexOf(id) >= 0;\r\n    return (\r\n      <Segment loading={isLoading} color={color}>\r\n        <Grid textAlign=\"left\" padded=\"horizontally\">\r\n          <Grid.Column width={4}>\r\n            <Grid.Row>\r\n              <div className=\"post-row\">\r\n                <Avatar\r\n                  className=\"post-avatar\"\r\n                  avatar={creator.avatar}\r\n                  centered={false}\r\n                  link={`/user/${creator.username}`}\r\n                />\r\n                <div className=\"post-column\">\r\n                  <div className=\"post-name\">{creator.name}</div>\r\n                  <div className=\"post-username\">\r\n                    <Link to={`/user/${creator.username}`}>\r\n                      <Icon name=\"user\" />\r\n                      {creator.username}\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"post-status\">\r\n                    {creator.status || 'Member'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Grid.Row>\r\n          </Grid.Column>\r\n          <Grid.Column width={12}>\r\n            <div className=\"post-time\">\r\n              {createdAt}\r\n              {(authenticatedIsStaff ||\r\n                authenticatedUsername === creator.username) &&\r\n                actions}\r\n            </div>\r\n            <RichEditor\r\n              readOnly={true}\r\n              content={content}\r\n              wrapperClassName={\r\n                false ? 'post-wrapper-edit' : 'post-wrapper-read'\r\n              }\r\n              editorClassName=\"post-editor\"\r\n              toolbarClassName=\"post-toolbar\"\r\n            />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}