{"ast":null,"code":"import _objectSpread from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_FORUM_REQUEST, FETCH_FORUM_SUCCESS, FETCH_FORUM_FAILURE, CREATE_THREAD_REQUEST, CREATE_THREAD_SUCCESS, CREATE_THREAD_FAILURE, CREATE_THREAD_SAVE, CREATE_THREAD_TOGGLE, LOGOUT } from '../actions/types';\nvar forumInitialState = {\n  isLoading: false,\n  name: null,\n  slug: null,\n  description: null,\n  threads: null,\n  error: null\n};\nvar newThreadInitialState = {\n  newThreadLoading: false,\n  newThreadSuccess: false,\n  newThreadName: '',\n  newThreadContent: '',\n  newThreadId: null,\n  newThreadError: null,\n  newThreadShow: false\n};\n\nvar initialState = _objectSpread({}, forumInitialState, newThreadInitialState);\n\nvar forum = function forum() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_FORUM_REQUEST:\n      return _objectSpread({}, forumInitialState, state, {\n        newThreadLoading: false,\n        newThreadSuccess: false,\n        newThreadId: null,\n        newThreadError: null,\n        newThreadShow: false,\n        isLoading: true,\n        error: null\n      });\n\n    case FETCH_FORUM_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        name: action.name,\n        slug: action.slug,\n        description: action.description,\n        threads: action.threads,\n        error: null\n      });\n\n    case FETCH_FORUM_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.error\n      });\n\n    case CREATE_THREAD_REQUEST:\n      return _objectSpread({}, state, {\n        newThreadLoading: true,\n        newThreadSuccess: false,\n        newThreadError: null,\n        newThreadName: action.newThread.name,\n        newThreadContent: action.newThread.content\n      });\n\n    case CREATE_THREAD_SUCCESS:\n      return _objectSpread({}, state, {\n        newThreadLoading: false,\n        newThreadSuccess: true,\n        newThreadName: '',\n        newThreadContent: '',\n        newThreadId: action.newThread.id,\n        newThreadShow: false,\n        newThreadError: null\n      });\n\n    case CREATE_THREAD_FAILURE:\n      return _objectSpread({}, state, {\n        newThreadLoading: false,\n        newThreadSuccess: false,\n        newThreadId: null,\n        newThreadShow: true,\n        newThreadError: action.error\n      });\n\n    case CREATE_THREAD_SAVE:\n      return _objectSpread({}, state, {\n        newThreadName: action.name,\n        newThreadContent: action.content\n      });\n\n    case CREATE_THREAD_TOGGLE:\n      return _objectSpread({}, state, {\n        newThreadShow: !state.newThreadShow,\n        newThreadSuccess: false,\n        newThreadError: null\n      });\n\n    case LOGOUT:\n      return _objectSpread({}, state, newThreadInitialState);\n\n    default:\n      return state;\n  }\n};\n\nexport default forum;","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/reducers/forum.js"],"names":["FETCH_FORUM_REQUEST","FETCH_FORUM_SUCCESS","FETCH_FORUM_FAILURE","CREATE_THREAD_REQUEST","CREATE_THREAD_SUCCESS","CREATE_THREAD_FAILURE","CREATE_THREAD_SAVE","CREATE_THREAD_TOGGLE","LOGOUT","forumInitialState","isLoading","name","slug","description","threads","error","newThreadInitialState","newThreadLoading","newThreadSuccess","newThreadName","newThreadContent","newThreadId","newThreadError","newThreadShow","initialState","forum","state","action","type","newThread","content","id"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_FORUM_REQUEST,\r\n  FETCH_FORUM_SUCCESS,\r\n  FETCH_FORUM_FAILURE,\r\n  CREATE_THREAD_REQUEST,\r\n  CREATE_THREAD_SUCCESS,\r\n  CREATE_THREAD_FAILURE,\r\n  CREATE_THREAD_SAVE,\r\n  CREATE_THREAD_TOGGLE,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst forumInitialState = {\r\n  isLoading: false,\r\n  name: null,\r\n  slug: null,\r\n  description: null,\r\n  threads: null,\r\n  error: null,\r\n};\r\n\r\nconst newThreadInitialState = {\r\n  newThreadLoading: false,\r\n  newThreadSuccess: false,\r\n  newThreadName: '',\r\n  newThreadContent: '',\r\n  newThreadId: null,\r\n  newThreadError: null,\r\n  newThreadShow: false,\r\n};\r\n\r\nconst initialState = {\r\n  ...forumInitialState,\r\n  ...newThreadInitialState,\r\n};\r\n\r\nconst forum = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_FORUM_REQUEST:\r\n      return {\r\n        ...forumInitialState,\r\n        ...state,\r\n        newThreadLoading: false,\r\n        newThreadSuccess: false,\r\n        newThreadId: null,\r\n        newThreadError: null,\r\n        newThreadShow: false,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_FORUM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        name: action.name,\r\n        slug: action.slug,\r\n        description: action.description,\r\n        threads: action.threads,\r\n        error: null,\r\n      };\r\n    case FETCH_FORUM_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    case CREATE_THREAD_REQUEST:\r\n      return {\r\n        ...state,\r\n        newThreadLoading: true,\r\n        newThreadSuccess: false,\r\n        newThreadError: null,\r\n        newThreadName: action.newThread.name,\r\n        newThreadContent: action.newThread.content,\r\n      };\r\n    case CREATE_THREAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        newThreadLoading: false,\r\n        newThreadSuccess: true,\r\n        newThreadName: '',\r\n        newThreadContent: '',\r\n        newThreadId: action.newThread.id,\r\n        newThreadShow: false,\r\n        newThreadError: null,\r\n      };\r\n    case CREATE_THREAD_FAILURE:\r\n      return {\r\n        ...state,\r\n        newThreadLoading: false,\r\n        newThreadSuccess: false,\r\n        newThreadId: null,\r\n        newThreadShow: true,\r\n        newThreadError: action.error,\r\n      };\r\n    case CREATE_THREAD_SAVE:\r\n      return {\r\n        ...state,\r\n        newThreadName: action.name,\r\n        newThreadContent: action.content,\r\n      };\r\n    case CREATE_THREAD_TOGGLE:\r\n      return {\r\n        ...state,\r\n        newThreadShow: !state.newThreadShow,\r\n        newThreadSuccess: false,\r\n        newThreadError: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        ...newThreadInitialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default forum;\r\n"]},"metadata":{},"sourceType":"module"}