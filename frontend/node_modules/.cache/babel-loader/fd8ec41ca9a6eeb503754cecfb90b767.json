{"ast":null,"code":"import _classCallCheck from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/modal/index.js\";\nimport React, { Component } from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport './styles.css';\n\nvar Modal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.listenKeyboard = function (event) {\n      if (event.key === 'Escape' || event.keyCode === 27) {\n        _this.props.onClose();\n      }\n    };\n\n    _this.closeModal = function () {\n      _this.props.onClose();\n    };\n\n    _this.onDialogClick = function (event) {\n      event.stopPropagation();\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.onClose) {\n        window.addEventListener('keydown', this.listenKeyboard, true);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.onClose) {\n        window.removeEventListener('keydown', this.listenKeyboard, true);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var overlayStyle = this.props.overlayStyle ? this.props.overlayStyle : {};\n      var contentStyle = this.props.contentStyle ? this.props.contentStyle : {};\n      var dialogStyle = this.props.dialogStyle ? this.props.dialogStyle : {};\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-overlay-div\",\n        style: overlayStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"modal-content-div\",\n        style: contentStyle,\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-dialog-div\",\n        style: dialogStyle,\n        onClick: this.onDialogClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"window close outline\",\n        size: \"large\",\n        className: \"modal-close-div\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), this.props.children)));\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\nexport { Modal as default };","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/modal/index.js"],"names":["React","Component","Icon","Modal","listenKeyboard","event","key","keyCode","props","onClose","closeModal","onDialogClick","stopPropagation","window","addEventListener","removeEventListener","overlayStyle","contentStyle","dialogStyle","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAO,cAAP;;IAEqBC,K;;;;;;;;;;;;;;;;;;UACnBC,c,GAAiB,UAAAC,KAAK,EAAI;AACxB,UAAIA,KAAK,CAACC,GAAN,KAAc,QAAd,IAA0BD,KAAK,CAACE,OAAN,KAAkB,EAAhD,EAAoD;AAClD,cAAKC,KAAL,CAAWC,OAAX;AACD;AACF,K;;UAcDC,U,GAAa,YAAM;AACjB,YAAKF,KAAL,CAAWC,OAAX;AACD,K;;UAEDE,a,GAAgB,UAAAN,KAAK,EAAI;AACvBA,MAAAA,KAAK,CAACO,eAAN;AACD,K;;;;;;;wCAlBmB;AAClB,UAAI,KAAKJ,KAAL,CAAWC,OAAf,EAAwB;AACtBI,QAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKV,cAAxC,EAAwD,IAAxD;AACD;AACF;;;2CAEsB;AACrB,UAAI,KAAKI,KAAL,CAAWC,OAAf,EAAwB;AACtBI,QAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsC,KAAKX,cAA3C,EAA2D,IAA3D;AACD;AACF;;;6BAUQ;AACP,UAAMY,YAAY,GAAG,KAAKR,KAAL,CAAWQ,YAAX,GAA0B,KAAKR,KAAL,CAAWQ,YAArC,GAAoD,EAAzE;AACA,UAAMC,YAAY,GAAG,KAAKT,KAAL,CAAWS,YAAX,GAA0B,KAAKT,KAAL,CAAWS,YAArC,GAAoD,EAAzE;AACA,UAAMC,WAAW,GAAG,KAAKV,KAAL,CAAWU,WAAX,GAAyB,KAAKV,KAAL,CAAWU,WAApC,GAAkD,EAAtE;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,KAAK,EAAEF,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,KAAK,EAAEC,YAFT;AAGE,QAAA,OAAO,EAAE,KAAKP,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,KAAK,EAAEQ,WAFT;AAGE,QAAA,OAAO,EAAE,KAAKP,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAC,sBADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAIE,QAAA,OAAO,EAAE,KAAKD,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAUG,KAAKF,KAAL,CAAWW,QAVd,CAJF,CAFF,CADF;AAsBD;;;;EAtDgClB,S;;SAAdE,K","sourcesContent":["import React, {Component} from 'react';\r\nimport {Icon} from 'semantic-ui-react';\r\nimport './styles.css';\r\n\r\nexport default class Modal extends Component {\r\n  listenKeyboard = event => {\r\n    if (event.key === 'Escape' || event.keyCode === 27) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.onClose) {\r\n      window.addEventListener('keydown', this.listenKeyboard, true);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.onClose) {\r\n      window.removeEventListener('keydown', this.listenKeyboard, true);\r\n    }\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  onDialogClick = event => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n    const overlayStyle = this.props.overlayStyle ? this.props.overlayStyle : {};\r\n    const contentStyle = this.props.contentStyle ? this.props.contentStyle : {};\r\n    const dialogStyle = this.props.dialogStyle ? this.props.dialogStyle : {};\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"modal-overlay-div\" style={overlayStyle} />\r\n        <div\r\n          className=\"modal-content-div\"\r\n          style={contentStyle}\r\n          onClick={this.closeModal}>\r\n          <div\r\n            className=\"modal-dialog-div\"\r\n            style={dialogStyle}\r\n            onClick={this.onDialogClick}>\r\n            <Icon\r\n              name=\"window close outline\"\r\n              size=\"large\"\r\n              className=\"modal-close-div\"\r\n              onClick={this.closeModal}\r\n            />\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}