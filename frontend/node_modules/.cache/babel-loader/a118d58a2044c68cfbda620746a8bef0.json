{"ast":null,"code":"import _objectSpread from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE, REGISTER_RESET } from '../actions/types';\nvar initialState = {\n  isLoading: false,\n  error: null\n};\n\nvar register = function register() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: null\n      });\n\n    case REGISTER_SUCCESS:\n      return {\n        isLoading: false,\n        error: null\n      };\n\n    case REGISTER_FAILURE:\n      return {\n        isLoading: false,\n        error: action.error\n      };\n\n    case REGISTER_RESET:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default register;","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/reducers/register.js"],"names":["REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","REGISTER_RESET","initialState","isLoading","error","register","state","action","type"],"mappings":";AAAA,SACEA,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,cAJF,QAKO,kBALP;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,gBAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,SAAS,EAAE,IAFb;AAGEC,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAKL,gBAAL;AACE,aAAO;AACLI,QAAAA,SAAS,EAAE,KADN;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAIF,SAAKJ,gBAAL;AACE,aAAO;AACLG,QAAAA,SAAS,EAAE,KADN;AAELC,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAFT,OAAP;;AAIF,SAAKH,cAAL;AACE,aAAOC,YAAP;;AACF;AACE,aAAOI,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,QAAf","sourcesContent":["import {\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILURE,\r\n  REGISTER_RESET,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst register = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case REGISTER_FAILURE:\r\n      return {\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case REGISTER_RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default register;\r\n"]},"metadata":{},"sourceType":"module"}