{"ast":null,"code":"import _classCallCheck from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/richeditor/index.js\";\nimport React, { Component } from 'react';\nimport { EditorState, ContentState, convertFromRaw } from 'draft-js';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './styles.css';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { imageUploadApi } from '../../api/image';\n\nvar RichEditor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RichEditor, _Component);\n\n  function RichEditor(props) {\n    var _this;\n\n    _classCallCheck(this, RichEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RichEditor).call(this, props));\n\n    _this.convertToEditorState = function (content) {\n      var editorState = EditorState.createEmpty();\n\n      if (content) {\n        try {\n          var contentState = convertFromRaw(JSON.parse(content));\n          editorState = EditorState.createWithContent(contentState);\n        } catch (error) {\n          var _contentState = ContentState.createFromText(content);\n\n          editorState = EditorState.createWithContent(_contentState);\n        }\n      }\n\n      return editorState;\n    };\n\n    _this.onEditorStateChange = function (editorState) {\n      _this.setState({\n        editorState: editorState\n      });\n    };\n\n    _this.uploadImageCallBack = function (file) {\n      return new Promise(function (resolve, reject) {\n        imageUploadApi(file, false).then(function (response) {\n          /* react-draft-wywsgi need data.link as the uploaded image url\r\n          so we had to slightly modify the result from cloudinary response */\n          var newResponse = {\n            data: {\n              link: response.data.secure_url\n            }\n          };\n          resolve(newResponse);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    };\n\n    var _this$props = _this.props,\n        _content = _this$props.content,\n        _editorState = _this$props.editorState;\n    _editorState = _editorState || _this.convertToEditorState(_content);\n    _this.state = {\n      editorState: _editorState\n    };\n    return _this;\n  }\n\n  _createClass(RichEditor, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      var newEditorState = newProps.editorState,\n          newContent = newProps.content;\n      var editorState = newEditorState || this.convertToEditorState(newContent);\n      this.setState({\n        editorState: editorState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          readOnly = _this$props2.readOnly,\n          wrapperClassName = _this$props2.wrapperClassName,\n          toolbarClassName = _this$props2.toolbarClassName,\n          editorClassName = _this$props2.editorClassName,\n          handleBeforeInput = _this$props2.handleBeforeInput,\n          handlePastedText = _this$props2.handlePastedText,\n          onEditorStateChange = _this$props2.onEditorStateChange,\n          editorState = _this$props2.editorState,\n          uploadImageCallBack = _this$props2.uploadImageCallBack,\n          placeholder = _this$props2.placeholder;\n      return React.createElement(Editor, {\n        toolbar: {\n          options: ['inline', 'blockType', 'fontSize', 'fontFamily', 'list', 'textAlign', 'colorPicker', 'link', 'emoji', 'image', 'history'],\n          inline: {\n            inDropdown: true\n          },\n          list: {\n            inDropdown: true\n          },\n          textAlign: {\n            inDropdown: true\n          },\n          link: {\n            inDropdown: true\n          },\n          image: {\n            uploadCallback: uploadImageCallBack || this.uploadImageCallBack,\n            alt: {\n              present: true\n            },\n            previewImage: true\n          },\n          fontFamily: {\n            options: ['Arial', 'Georgia', 'Impact', 'Tahoma', 'Roboto', 'Times New Roman', 'Verdana']\n          }\n        },\n        editorState: editorState || this.state.editorState,\n        wrapperClassName: wrapperClassName || 'richEditor-wrapper',\n        toolbarClassName: toolbarClassName || 'richEditor-toolbar',\n        editorClassName: editorClassName || 'richEditor-editor',\n        onEditorStateChange: onEditorStateChange || this.onEditorStateChange,\n        readOnly: readOnly,\n        toolbarHidden: readOnly,\n        handleBeforeInput: handleBeforeInput,\n        handlePastedText: handlePastedText,\n        placeholder: placeholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return RichEditor;\n}(Component);\n\nexport { RichEditor as default };","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/richeditor/index.js"],"names":["React","Component","EditorState","ContentState","convertFromRaw","Editor","imageUploadApi","RichEditor","props","convertToEditorState","content","editorState","createEmpty","contentState","JSON","parse","createWithContent","error","createFromText","onEditorStateChange","setState","uploadImageCallBack","file","Promise","resolve","reject","then","response","newResponse","data","link","secure_url","catch","state","newProps","newEditorState","newContent","readOnly","wrapperClassName","toolbarClassName","editorClassName","handleBeforeInput","handlePastedText","placeholder","options","inline","inDropdown","list","textAlign","image","uploadCallback","alt","present","previewImage","fontFamily"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {EditorState, ContentState, convertFromRaw} from 'draft-js';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport './styles.css';\r\nimport {Editor} from 'react-draft-wysiwyg';\r\nimport {imageUploadApi} from '../../api/image';\r\n\r\nexport default class RichEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let {content, editorState} = this.props;\r\n    editorState = editorState || this.convertToEditorState(content);\r\n    this.state = {\r\n      editorState,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const {editorState: newEditorState, content: newContent} = newProps;\r\n    const editorState = newEditorState || this.convertToEditorState(newContent);\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  }\r\n\r\n  convertToEditorState = content => {\r\n    let editorState = EditorState.createEmpty();\r\n    if (content) {\r\n      try {\r\n        const contentState = convertFromRaw(JSON.parse(content));\r\n        editorState = EditorState.createWithContent(contentState);\r\n      } catch (error) {\r\n        const contentState = ContentState.createFromText(content);\r\n        editorState = EditorState.createWithContent(contentState);\r\n      }\r\n    }\r\n    return editorState;\r\n  };\r\n\r\n  onEditorStateChange = editorState => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  uploadImageCallBack = file => {\r\n    return new Promise((resolve, reject) => {\r\n      imageUploadApi(file, false)\r\n        .then(response => {\r\n          /* react-draft-wywsgi need data.link as the uploaded image url\r\n          so we had to slightly modify the result from cloudinary response */\r\n          let newResponse = {\r\n            data: {\r\n              link: response.data.secure_url,\r\n            },\r\n          };\r\n          resolve(newResponse);\r\n        })\r\n        .catch(error => {\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      readOnly,\r\n      wrapperClassName,\r\n      toolbarClassName,\r\n      editorClassName,\r\n      handleBeforeInput,\r\n      handlePastedText,\r\n      onEditorStateChange,\r\n      editorState,\r\n      uploadImageCallBack,\r\n      placeholder,\r\n    } = this.props;\r\n    return (\r\n      <Editor\r\n        toolbar={{\r\n          options: [\r\n            'inline',\r\n            'blockType',\r\n            'fontSize',\r\n            'fontFamily',\r\n            'list',\r\n            'textAlign',\r\n            'colorPicker',\r\n            'link',\r\n            'emoji',\r\n            'image',\r\n            'history',\r\n          ],\r\n          inline: {inDropdown: true},\r\n          list: {inDropdown: true},\r\n          textAlign: {inDropdown: true},\r\n          link: {inDropdown: true},\r\n          image: {\r\n            uploadCallback: uploadImageCallBack || this.uploadImageCallBack,\r\n            alt: {present: true},\r\n            previewImage: true,\r\n          },\r\n          fontFamily: {\r\n            options: [\r\n              'Arial',\r\n              'Georgia',\r\n              'Impact',\r\n              'Tahoma',\r\n              'Roboto',\r\n              'Times New Roman',\r\n              'Verdana',\r\n            ],\r\n          },\r\n        }}\r\n        editorState={editorState || this.state.editorState}\r\n        wrapperClassName={wrapperClassName || 'richEditor-wrapper'}\r\n        toolbarClassName={toolbarClassName || 'richEditor-toolbar'}\r\n        editorClassName={editorClassName || 'richEditor-editor'}\r\n        onEditorStateChange={onEditorStateChange || this.onEditorStateChange}\r\n        readOnly={readOnly}\r\n        toolbarHidden={readOnly}\r\n        handleBeforeInput={handleBeforeInput}\r\n        handlePastedText={handlePastedText}\r\n        placeholder={placeholder}\r\n      />\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}