{"ast":null,"code":"import _classCallCheck from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/khanhpn/Project/freelancer/rengorum/frontend/src/containers/modal/login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Login from '../../components/login';\nimport Modal from '../../components/modal';\nimport { hideModal, loginReset, showModal, login } from '../../actions';\n\nvar LoginModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginModal, _Component);\n\n  function LoginModal() {\n    _classCallCheck(this, LoginModal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LoginModal).apply(this, arguments));\n  }\n\n  _createClass(LoginModal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.isAuthenticated) {\n        this.props.handleClose();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isAuthenticated = _this$props.isAuthenticated,\n          isLoading = _this$props.isLoading,\n          error = _this$props.error,\n          handleClose = _this$props.handleClose,\n          showRegister = _this$props.showRegister,\n          handleLogin = _this$props.handleLogin;\n      return isAuthenticated ? null : React.createElement(Modal, {\n        onClose: handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Login, {\n        handleLogin: handleLogin,\n        showRegister: showRegister,\n        isLoading: isLoading,\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LoginModal;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.auth.isLoading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleLogin: function handleLogin(email, password) {\n      dispatch(login(email, password));\n    },\n    handleClose: function handleClose() {\n      dispatch(hideModal());\n      dispatch(loginReset());\n    },\n    showRegister: function showRegister() {\n      dispatch(showModal('REGISTER', {}));\n      dispatch(loginReset());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginModal);","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/containers/modal/login.js"],"names":["React","Component","connect","Login","Modal","hideModal","loginReset","showModal","login","LoginModal","props","isAuthenticated","handleClose","isLoading","error","showRegister","handleLogin","mapStateToProps","state","auth","mapDispatchToProps","dispatch","email","password"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,SAA/B,EAA0CC,KAA1C,QAAsD,eAAtD;;IAEMC,U;;;;;;;;;;;;;yCACiB;AACnB,UAAI,KAAKC,KAAL,CAAWC,eAAf,EAAgC;AAC9B,aAAKD,KAAL,CAAWE,WAAX;AACD;AACF;;;6BAEQ;AAAA,wBAQH,KAAKF,KARF;AAAA,UAELC,eAFK,eAELA,eAFK;AAAA,UAGLE,SAHK,eAGLA,SAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLF,WALK,eAKLA,WALK;AAAA,UAMLG,YANK,eAMLA,YANK;AAAA,UAOLC,WAPK,eAOLA,WAPK;AAUP,aAAOL,eAAe,GAAG,IAAH,GACpB,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAEC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,WAAW,EAAEI,WADf;AAEE,QAAA,YAAY,EAAED,YAFhB;AAGE,QAAA,SAAS,EAAEF,SAHb;AAIE,QAAA,KAAK,EAAEC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;;;EA3BsBb,S;;AA8BzB,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCL,IAAAA,SAAS,EAAEK,KAAK,CAACC,IAAN,CAAWN,SADU;AAEhCC,IAAAA,KAAK,EAAEI,KAAK,CAACC,IAAN,CAAWL,KAFc;AAGhCH,IAAAA,eAAe,EAAEO,KAAK,CAACC,IAAN,CAAWR;AAHI,GAAL;AAAA,CAA7B;;AAMA,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCL,IAAAA,WAAW,EAAE,qBAACM,KAAD,EAAQC,QAAR,EAAqB;AAChCF,MAAAA,QAAQ,CAACb,KAAK,CAACc,KAAD,EAAQC,QAAR,CAAN,CAAR;AACD,KAHqC;AAItCX,IAAAA,WAAW,EAAE,uBAAM;AACjBS,MAAAA,QAAQ,CAAChB,SAAS,EAAV,CAAR;AACAgB,MAAAA,QAAQ,CAACf,UAAU,EAAX,CAAR;AACD,KAPqC;AAQtCS,IAAAA,YAAY,EAAE,wBAAM;AAClBM,MAAAA,QAAQ,CAACd,SAAS,CAAC,UAAD,EAAa,EAAb,CAAV,CAAR;AACAc,MAAAA,QAAQ,CAACf,UAAU,EAAX,CAAR;AACD;AAXqC,GAAL;AAAA,CAAnC;;AAcA,eAAeJ,OAAO,CACpBe,eADoB,EAEpBG,kBAFoB,CAAP,CAGbX,UAHa,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Login from '../../components/login';\r\nimport Modal from '../../components/modal';\r\nimport {hideModal, loginReset, showModal, login} from '../../actions';\r\n\r\nclass LoginModal extends Component {\r\n  componentWillMount() {\r\n    if (this.props.isAuthenticated) {\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isAuthenticated,\r\n      isLoading,\r\n      error,\r\n      handleClose,\r\n      showRegister,\r\n      handleLogin,\r\n    } = this.props;\r\n\r\n    return isAuthenticated ? null : (\r\n      <Modal onClose={handleClose}>\r\n        <Login\r\n          handleLogin={handleLogin}\r\n          showRegister={showRegister}\r\n          isLoading={isLoading}\r\n          error={error}\r\n        />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.auth.isLoading,\r\n  error: state.auth.error,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleLogin: (email, password) => {\r\n    dispatch(login(email, password));\r\n  },\r\n  handleClose: () => {\r\n    dispatch(hideModal());\r\n    dispatch(loginReset());\r\n  },\r\n  showRegister: () => {\r\n    dispatch(showModal('REGISTER', {}));\r\n    dispatch(loginReset());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(LoginModal);\r\n"]},"metadata":{},"sourceType":"module"}