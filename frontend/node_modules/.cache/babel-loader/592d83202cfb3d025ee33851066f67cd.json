{"ast":null,"code":"export var apiErrorHandler = function apiErrorHandler(error) {\n  try {\n    if (!error.response) {\n      return 'Error: Network Error';\n    } else if (error.response.data) {\n      var erd = error.response.data;\n\n      if (erd.detail) {\n        if (erd.detail === 'Invalid token.') {\n          return 'Invalid Token. Please re-login.';\n        }\n\n        return erd.detail;\n      }\n\n      if (erd[0]) return erd[0];\n      var key = Object.keys(erd)[0];\n      var errorString = erd[key][0];\n\n      if (['non_field_errors', 'detail'].indexOf(key) >= 0) {\n        return errorString;\n      }\n\n      var errorField = String(key).replace('_', ' ');\n      return errorField.charAt(0).toUpperCase() + errorField.substring(1) + ': ' + errorString;\n    }\n  } catch (error) {\n    console.log(error);\n    return 'Something wrong happened. Please report this.';\n  }\n};","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/utils/errorhandler.js"],"names":["apiErrorHandler","error","response","data","erd","detail","key","Object","keys","errorString","indexOf","errorField","String","replace","charAt","toUpperCase","substring","console","log"],"mappings":"AAAA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AACtC,MAAI;AACF,QAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACnB,aAAO,sBAAP;AACD,KAFD,MAEO,IAAID,KAAK,CAACC,QAAN,CAAeC,IAAnB,EAAyB;AAC9B,UAAMC,GAAG,GAAGH,KAAK,CAACC,QAAN,CAAeC,IAA3B;;AACA,UAAIC,GAAG,CAACC,MAAR,EAAgB;AACd,YAAID,GAAG,CAACC,MAAJ,KAAe,gBAAnB,EAAqC;AACnC,iBAAO,iCAAP;AACD;;AACD,eAAOD,GAAG,CAACC,MAAX;AACD;;AACD,UAAID,GAAG,CAAC,CAAD,CAAP,EAAY,OAAOA,GAAG,CAAC,CAAD,CAAV;AACZ,UAAME,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiB,CAAjB,CAAZ;AACA,UAAMK,WAAW,GAAGL,GAAG,CAACE,GAAD,CAAH,CAAS,CAAT,CAApB;;AACA,UAAI,CAAC,kBAAD,EAAqB,QAArB,EAA+BI,OAA/B,CAAuCJ,GAAvC,KAA+C,CAAnD,EAAsD;AACpD,eAAOG,WAAP;AACD;;AACD,UAAME,UAAU,GAAGC,MAAM,CAACN,GAAD,CAAN,CAAYO,OAAZ,CAAoB,GAApB,EAAyB,GAAzB,CAAnB;AACA,aACEF,UAAU,CAACG,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KACAJ,UAAU,CAACK,SAAX,CAAqB,CAArB,CADA,GAEA,IAFA,GAGAP,WAJF;AAMD;AACF,GAzBD,CAyBE,OAAOR,KAAP,EAAc;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACA,WAAO,+CAAP;AACD;AACF,CA9BM","sourcesContent":["export const apiErrorHandler = error => {\r\n  try {\r\n    if (!error.response) {\r\n      return 'Error: Network Error';\r\n    } else if (error.response.data) {\r\n      const erd = error.response.data;\r\n      if (erd.detail) {\r\n        if (erd.detail === 'Invalid token.') {\r\n          return 'Invalid Token. Please re-login.';\r\n        }\r\n        return erd.detail;\r\n      }\r\n      if (erd[0]) return erd[0];\r\n      const key = Object.keys(erd)[0];\r\n      const errorString = erd[key][0];\r\n      if (['non_field_errors', 'detail'].indexOf(key) >= 0) {\r\n        return errorString;\r\n      }\r\n      const errorField = String(key).replace('_', ' ');\r\n      return (\r\n        errorField.charAt(0).toUpperCase() +\r\n        errorField.substring(1) +\r\n        ': ' +\r\n        errorString\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return 'Something wrong happened. Please report this.';\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}