{"ast":null,"code":"import _defineProperty from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/khanhpn/Project/freelancer/rengorum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/editprofile/index.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Form, Image, Message, Button, TextArea, Grid } from 'semantic-ui-react';\nimport { imageUploadApi } from '../../api/image';\nimport StatusMessage from '../../components/statusmessage';\nimport './styles.css';\n\nvar EditProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditProfile, _Component);\n\n  function EditProfile(props) {\n    var _this;\n\n    _classCallCheck(this, EditProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditProfile).call(this, props));\n\n    _this.handleChange = function (e, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onImageDrop = function (files) {\n      _this.setState({\n        avatarFile: files[0]\n      });\n    };\n\n    _this.editProfile = function () {\n      var newProfile = {\n        name: _this.state.name,\n        current_password: _this.state.currentPassword,\n        new_password: _this.state.newPassword,\n        bio: _this.state.bio,\n        avatar: _this.state.avatar,\n        status: _this.state.status\n      };\n\n      _this.props.handleEdit(newProfile); // prevent spamming so user have to keep entering password for every edit submission\n\n\n      _this.setState({\n        currentPassword: ''\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var _this$state = _this.state,\n          currentPassword = _this$state.currentPassword,\n          avatarFile = _this$state.avatarFile;\n\n      if (currentPassword !== '') {\n        if (!avatarFile) {\n          // no new avatar\n          _this.editProfile();\n        } else {\n          _this.setState({\n            avatarUploading: true\n          });\n\n          imageUploadApi(avatarFile).then(function (response) {\n            _this.setState({\n              avatar: response.data.secure_url,\n              avatarUploading: false\n            });\n\n            _this.editProfile();\n          }).catch(function (error) {\n            console.log(error);\n\n            _this.setState({\n              avatarError: 'Image Upload Error',\n              avatarFile: null,\n              avatarUploading: false\n            });\n          });\n        }\n      }\n    };\n\n    var _this$props = _this.props,\n        _name = _this$props.name,\n        avatar = _this$props.avatar;\n    _this.state = {\n      name: _name,\n      newPassword: '',\n      currentPassword: '',\n      bio: '',\n      status: '',\n      avatar: avatar,\n      avatarFile: null,\n      avatarError: null,\n      avatarUploading: false\n    };\n    return _this;\n  }\n\n  _createClass(EditProfile, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          isLoading = _this$props2.isLoading,\n          error = _this$props2.error,\n          success = _this$props2.success;\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          newPassword = _this$state2.newPassword,\n          currentPassword = _this$state2.currentPassword,\n          bio = _this$state2.bio,\n          status = _this$state2.status,\n          avatar = _this$state2.avatar,\n          avatarFile = _this$state2.avatarFile,\n          avatarError = _this$state2.avatarError,\n          avatarUploading = _this$state2.avatarUploading;\n      var statusMessage = React.createElement(StatusMessage, {\n        error: error || avatarError,\n        errorMessage: error || avatarError,\n        loading: isLoading || avatarUploading,\n        loadingMessage: 'Editing your profile',\n        success: success,\n        successMessage: 'Your profile edit was successful',\n        type: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n      var avatarURL = avatarFile ? avatarFile.preview : avatar;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Message, {\n        attached: true,\n        header: \"Edit Your Profile\",\n        content: \"Fill out any part of the form below to edit your profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), statusMessage, React.createElement(Form, {\n        className: \"attached segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        celled: true,\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Profile picture\"), React.createElement(Dropzone, {\n        onDrop: this.onImageDrop,\n        multiple: false,\n        accept: \"image/*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: avatarURL,\n        className: \"editProfile-avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), React.createElement(Form.Input, {\n        label: \"Bio\",\n        placeholder: \"Describe yourself\",\n        type: \"text\",\n        name: \"bio\",\n        control: TextArea,\n        value: bio,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        label: \"Name\",\n        placeholder: \"Name\",\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        required: true,\n        label: \"Current Password\",\n        type: \"password\",\n        name: \"currentPassword\",\n        value: currentPassword,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        label: \"New Password\",\n        type: \"password\",\n        name: \"newPassword\",\n        value: newPassword,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        label: \"Status\",\n        placeholder: \"Who are you (e.g: Writer)\",\n        type: \"text\",\n        name: \"status\",\n        value: status,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"blue\",\n        loading: isLoading,\n        disabled: isLoading,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return EditProfile;\n}(Component);\n\nexport { EditProfile as default };","map":{"version":3,"sources":["/Users/khanhpn/Project/freelancer/rengorum/frontend/src/components/editprofile/index.js"],"names":["React","Component","Dropzone","Form","Image","Message","Button","TextArea","Grid","imageUploadApi","StatusMessage","EditProfile","props","handleChange","e","name","value","setState","onImageDrop","files","avatarFile","editProfile","newProfile","state","current_password","currentPassword","new_password","newPassword","bio","avatar","status","handleEdit","handleSubmit","avatarUploading","then","response","data","secure_url","catch","error","console","log","avatarError","isLoading","success","statusMessage","avatarURL","preview"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport {Form, Image, Message, Button, TextArea, Grid} from 'semantic-ui-react';\r\nimport {imageUploadApi} from '../../api/image';\r\nimport StatusMessage from '../../components/statusmessage';\r\nimport './styles.css';\r\n\r\nexport default class EditProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {name, avatar} = this.props;\r\n\r\n    this.state = {\r\n      name: name,\r\n      newPassword: '',\r\n      currentPassword: '',\r\n      bio: '',\r\n      status: '',\r\n      avatar: avatar,\r\n      avatarFile: null,\r\n      avatarError: null,\r\n      avatarUploading: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  onImageDrop = files => {\r\n    this.setState({\r\n      avatarFile: files[0],\r\n    });\r\n  };\r\n\r\n  editProfile = () => {\r\n    let newProfile = {\r\n      name: this.state.name,\r\n      current_password: this.state.currentPassword,\r\n      new_password: this.state.newPassword,\r\n      bio: this.state.bio,\r\n      avatar: this.state.avatar,\r\n      status: this.state.status,\r\n    };\r\n    this.props.handleEdit(newProfile);\r\n\r\n    // prevent spamming so user have to keep entering password for every edit submission\r\n    this.setState({\r\n      currentPassword: '',\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const {currentPassword, avatarFile} = this.state;\r\n\r\n    if (currentPassword !== '') {\r\n      if (!avatarFile) {\r\n        // no new avatar\r\n        this.editProfile();\r\n      } else {\r\n        this.setState({\r\n          avatarUploading: true,\r\n        });\r\n\r\n        imageUploadApi(avatarFile)\r\n          .then(response => {\r\n            this.setState({\r\n              avatar: response.data.secure_url,\r\n              avatarUploading: false,\r\n            });\r\n            this.editProfile();\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            this.setState({\r\n              avatarError: 'Image Upload Error',\r\n              avatarFile: null,\r\n              avatarUploading: false,\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {isLoading, error, success} = this.props;\r\n\r\n    let {\r\n      name,\r\n      newPassword,\r\n      currentPassword,\r\n      bio,\r\n      status,\r\n      avatar,\r\n      avatarFile,\r\n      avatarError,\r\n      avatarUploading,\r\n    } = this.state;\r\n\r\n    const statusMessage = (\r\n      <StatusMessage\r\n        error={error || avatarError}\r\n        errorMessage={error || avatarError}\r\n        loading={isLoading || avatarUploading}\r\n        loadingMessage={'Editing your profile'}\r\n        success={success}\r\n        successMessage={'Your profile edit was successful'}\r\n        type=\"modal\"\r\n      />\r\n    );\r\n    const avatarURL = avatarFile ? avatarFile.preview : avatar;\r\n\r\n    return (\r\n      <div>\r\n        <Message\r\n          attached\r\n          header=\"Edit Your Profile\"\r\n          content=\"Fill out any part of the form below to edit your profile\"\r\n        />\r\n        {statusMessage}\r\n        <Form className=\"attached segment\">\r\n          <Grid celled columns={2}>\r\n            <Grid.Column>\r\n              <Form.Field>\r\n                <label>Profile picture</label>\r\n                <Dropzone\r\n                  onDrop={this.onImageDrop}\r\n                  multiple={false}\r\n                  accept=\"image/*\">\r\n                  <Image src={avatarURL} className=\"editProfile-avatar\" />\r\n                </Dropzone>\r\n              </Form.Field>\r\n              <Form.Input\r\n                label=\"Bio\"\r\n                placeholder=\"Describe yourself\"\r\n                type=\"text\"\r\n                name=\"bio\"\r\n                control={TextArea}\r\n                value={bio}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Form.Input\r\n                label=\"Name\"\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Input\r\n                required\r\n                label=\"Current Password\"\r\n                type=\"password\"\r\n                name=\"currentPassword\"\r\n                value={currentPassword}\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Input\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                value={newPassword}\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Input\r\n                label=\"Status\"\r\n                placeholder=\"Who are you (e.g: Writer)\"\r\n                type=\"text\"\r\n                name=\"status\"\r\n                value={status}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid>\r\n          <Button\r\n            color=\"blue\"\r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n            onClick={this.handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}